{"ast":null,"code":"var _jsxFileName = \"/Users/neetishsharma/Desktop/Alchemy Projects/hello-world-part-four-tutorial/starter-files/src/HelloWorld.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { helloWorldContract, connectWallet, updateMessage, loadCurrentMessage, getCurrentWalletConnected } from \"./util/interact.js\";\nimport alchemylogo from \"./alchemylogo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HelloWorld = () => {\n  _s();\n\n  //state variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\n\n  const [newMessage, setNewMessage] = useState(\"\"); //called only once\n\n  useEffect(async () => {\n    const message = await loadCurrentMessage();\n    setMessage(message);\n    addSmartContractListener();\n    const {\n      address,\n      status\n    } = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status);\n  }, []);\n\n  function addSmartContractListener() {\n    //TODO: implement\n    helloWorldContract.events.UpdatedMessages({}, (error, data) => {\n      if (error) {\n        setStatus(\"ðŸ˜¥ \" + error.message);\n      } else {\n        setMessage(data.returnValues[1]);\n        setNewMessage(\"\");\n        setStatus(\"ðŸŽ‰ Your message has been updated!\");\n      }\n    });\n  }\n\n  function addWalletListener() {//TODO: implement\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onUpdatePressed = async () => {//TODO: implement\n  }; //the UI of our component\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"logo\",\n      src: alchemylogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"walletButton\",\n      onClick: connectWalletPressed,\n      children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        paddingTop: \"50px\"\n      },\n      children: \"Current Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        paddingTop: \"18px\"\n      },\n      children: \"New Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update the message in your smart contract.\",\n        onChange: e => setNewMessage(e.target.value),\n        value: newMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"publish\",\n        onClick: onUpdatePressed,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HelloWorld, \"Gq/QBHQMC3uFvf9JJRa28vw0vHw=\");\n\n_c = HelloWorld;\nexport default HelloWorld;\n\nvar _c;\n\n$RefreshReg$(_c, \"HelloWorld\");","map":{"version":3,"sources":["/Users/neetishsharma/Desktop/Alchemy Projects/hello-world-part-four-tutorial/starter-files/src/HelloWorld.js"],"names":["React","useEffect","useState","helloWorldContract","connectWallet","updateMessage","loadCurrentMessage","getCurrentWalletConnected","HelloWorld","walletAddress","setWallet","status","setStatus","message","setMessage","newMessage","setNewMessage","addSmartContractListener","address","events","UpdatedMessages","error","data","returnValues","addWalletListener","connectWalletPressed","walletResponse","onUpdatePressed","alchemylogo","length","String","substring","paddingTop","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  helloWorldContract,\n  connectWallet,\n  updateMessage,\n  loadCurrentMessage,\n  getCurrentWalletConnected,\n} from \"./util/interact.js\";\n\nimport alchemylogo from \"./alchemylogo.svg\";\n\nconst HelloWorld = () => {\n  //state variables\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  //called only once\n  useEffect(async () => {\n    const message = await loadCurrentMessage();\n    setMessage(message);\n    addSmartContractListener();\n\n    const {address, status} = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status); \n\n}, []);\n\n  function addSmartContractListener() { //TODO: implement\n    helloWorldContract.events.UpdatedMessages({}, (error, data) => {\n      if (error) {\n        setStatus(\"ðŸ˜¥ \" + error.message);\n      } else {\n        setMessage(data.returnValues[1]);\n        setNewMessage(\"\");\n        setStatus(\"ðŸŽ‰ Your message has been updated!\");\n      }\n    });\n  }\n\n  function addWalletListener() { //TODO: implement\n\n  }\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  const onUpdatePressed = async () => { //TODO: implement\n\n  };\n\n  //the UI of our component\n  return (\n    <div id=\"container\">\n      <img id=\"logo\" src={alchemylogo}></img>\n      <button id=\"walletButton\" onClick={connectWalletPressed}>\n        {walletAddress.length > 0 ? (\n          \"Connected: \" +\n          String(walletAddress).substring(0, 6) +\n          \"...\" +\n          String(walletAddress).substring(38)\n        ) : (\n          <span>Connect Wallet</span>\n        )}\n      </button>\n\n      <h2 style={{ paddingTop: \"50px\" }}>Current Message:</h2>\n      <p>{message}</p>\n\n      <h2 style={{ paddingTop: \"18px\" }}>New Message:</h2>\n\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Update the message in your smart contract.\"\n          onChange={(e) => setNewMessage(e.target.value)}\n          value={newMessage}\n        />\n        <p id=\"status\">{status}</p>\n\n        <button id=\"publish\" onClick={onUpdatePressed}>\n          Update\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HelloWorld;\n"]},"metadata":{},"sourceType":"module"}